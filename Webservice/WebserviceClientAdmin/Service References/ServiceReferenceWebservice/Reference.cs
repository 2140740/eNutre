//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebserviceClientAdmin.ServiceReferenceWebservice {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Webservice")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Admin {
            get {
                return this.AdminField;
            }
            set {
                if ((this.AdminField.Equals(value) != true)) {
                    this.AdminField = value;
                    this.RaisePropertyChanged("Admin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Exercicios", Namespace="http://schemas.datacontract.org/2004/07/Webservice")]
    [System.SerializableAttribute()]
    public partial class Exercicios : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaloriasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Calorias {
            get {
                return this.CaloriasField;
            }
            set {
                if ((object.ReferenceEquals(this.CaloriasField, value) != true)) {
                    this.CaloriasField = value;
                    this.RaisePropertyChanged("Calorias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Met {
            get {
                return this.MetField;
            }
            set {
                if ((object.ReferenceEquals(this.MetField, value) != true)) {
                    this.MetField = value;
                    this.RaisePropertyChanged("Met");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Restaurantes", Namespace="http://schemas.datacontract.org/2004/07/Webservice")]
    [System.SerializableAttribute()]
    public partial class Restaurantes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaloriasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantidadeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RestauranteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Calorias {
            get {
                return this.CaloriasField;
            }
            set {
                if ((object.ReferenceEquals(this.CaloriasField, value) != true)) {
                    this.CaloriasField = value;
                    this.RaisePropertyChanged("Calorias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Item {
            get {
                return this.ItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemField, value) != true)) {
                    this.ItemField = value;
                    this.RaisePropertyChanged("Item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quantidade {
            get {
                return this.QuantidadeField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantidadeField, value) != true)) {
                    this.QuantidadeField = value;
                    this.RaisePropertyChanged("Quantidade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Restaurante {
            get {
                return this.RestauranteField;
            }
            set {
                if ((object.ReferenceEquals(this.RestauranteField, value) != true)) {
                    this.RestauranteField = value;
                    this.RaisePropertyChanged("Restaurante");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vegetais", Namespace="http://schemas.datacontract.org/2004/07/Webservice")]
    [System.SerializableAttribute()]
    public partial class Vegetais : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaloriasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantidadeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Calorias {
            get {
                return this.CaloriasField;
            }
            set {
                if ((object.ReferenceEquals(this.CaloriasField, value) != true)) {
                    this.CaloriasField = value;
                    this.RaisePropertyChanged("Calorias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quantidade {
            get {
                return this.QuantidadeField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantidadeField, value) != true)) {
                    this.QuantidadeField = value;
                    this.RaisePropertyChanged("Quantidade");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceWebservice.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SignUp", ReplyAction="http://tempuri.org/IService1/SignUpResponse")]
        void SignUp(WebserviceClientAdmin.ServiceReferenceWebservice.User user, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SignUp", ReplyAction="http://tempuri.org/IService1/SignUpResponse")]
        System.Threading.Tasks.Task SignUpAsync(WebserviceClientAdmin.ServiceReferenceWebservice.User user, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LogIn", ReplyAction="http://tempuri.org/IService1/LogInResponse")]
        string LogIn(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LogIn", ReplyAction="http://tempuri.org/IService1/LogInResponse")]
        System.Threading.Tasks.Task<string> LogInAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LogOut", ReplyAction="http://tempuri.org/IService1/LogOutResponse")]
        void LogOut(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LogOut", ReplyAction="http://tempuri.org/IService1/LogOutResponse")]
        System.Threading.Tasks.Task LogOutAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsAdmin", ReplyAction="http://tempuri.org/IService1/IsAdminResponse")]
        bool IsAdmin(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsAdmin", ReplyAction="http://tempuri.org/IService1/IsAdminResponse")]
        System.Threading.Tasks.Task<bool> IsAdminAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsLoggedIn", ReplyAction="http://tempuri.org/IService1/IsLoggedInResponse")]
        bool IsLoggedIn(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsLoggedIn", ReplyAction="http://tempuri.org/IService1/IsLoggedInResponse")]
        System.Threading.Tasks.Task<bool> IsLoggedInAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetExercicio", ReplyAction="http://tempuri.org/IService1/GetExercicioResponse")]
        WebserviceClientAdmin.ServiceReferenceWebservice.Exercicios[] GetExercicio(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetExercicio", ReplyAction="http://tempuri.org/IService1/GetExercicioResponse")]
        System.Threading.Tasks.Task<WebserviceClientAdmin.ServiceReferenceWebservice.Exercicios[]> GetExercicioAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddExercicio", ReplyAction="http://tempuri.org/IService1/AddExercicioResponse")]
        void AddExercicio(WebserviceClientAdmin.ServiceReferenceWebservice.Exercicios exercicios, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddExercicio", ReplyAction="http://tempuri.org/IService1/AddExercicioResponse")]
        System.Threading.Tasks.Task AddExercicioAsync(WebserviceClientAdmin.ServiceReferenceWebservice.Exercicios exercicios, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteExercicioisByTitle", ReplyAction="http://tempuri.org/IService1/DeleteExercicioisByTitleResponse")]
        void DeleteExercicioisByTitle(string exercicio, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteExercicioisByTitle", ReplyAction="http://tempuri.org/IService1/DeleteExercicioisByTitleResponse")]
        System.Threading.Tasks.Task DeleteExercicioisByTitleAsync(string exercicio, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRestaurantes", ReplyAction="http://tempuri.org/IService1/GetRestaurantesResponse")]
        WebserviceClientAdmin.ServiceReferenceWebservice.Restaurantes[] GetRestaurantes(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRestaurantes", ReplyAction="http://tempuri.org/IService1/GetRestaurantesResponse")]
        System.Threading.Tasks.Task<WebserviceClientAdmin.ServiceReferenceWebservice.Restaurantes[]> GetRestaurantesAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddRestaurante", ReplyAction="http://tempuri.org/IService1/AddRestauranteResponse")]
        void AddRestaurante(WebserviceClientAdmin.ServiceReferenceWebservice.Restaurantes restaurante, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddRestaurante", ReplyAction="http://tempuri.org/IService1/AddRestauranteResponse")]
        System.Threading.Tasks.Task AddRestauranteAsync(WebserviceClientAdmin.ServiceReferenceWebservice.Restaurantes restaurante, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRestauranteByTitle", ReplyAction="http://tempuri.org/IService1/DeleteRestauranteByTitleResponse")]
        void DeleteRestauranteByTitle(string restaurante, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRestauranteByTitle", ReplyAction="http://tempuri.org/IService1/DeleteRestauranteByTitleResponse")]
        System.Threading.Tasks.Task DeleteRestauranteByTitleAsync(string restaurante, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetVegetais", ReplyAction="http://tempuri.org/IService1/GetVegetaisResponse")]
        WebserviceClientAdmin.ServiceReferenceWebservice.Vegetais[] GetVegetais(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetVegetais", ReplyAction="http://tempuri.org/IService1/GetVegetaisResponse")]
        System.Threading.Tasks.Task<WebserviceClientAdmin.ServiceReferenceWebservice.Vegetais[]> GetVegetaisAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddVegetal", ReplyAction="http://tempuri.org/IService1/AddVegetalResponse")]
        void AddVegetal(WebserviceClientAdmin.ServiceReferenceWebservice.Vegetais vegetais, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddVegetal", ReplyAction="http://tempuri.org/IService1/AddVegetalResponse")]
        System.Threading.Tasks.Task AddVegetalAsync(WebserviceClientAdmin.ServiceReferenceWebservice.Vegetais vegetais, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteVegetaisByTitle", ReplyAction="http://tempuri.org/IService1/DeleteVegetaisByTitleResponse")]
        void DeleteVegetaisByTitle(string vegetal, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteVegetaisByTitle", ReplyAction="http://tempuri.org/IService1/DeleteVegetaisByTitleResponse")]
        System.Threading.Tasks.Task DeleteVegetaisByTitleAsync(string vegetal, string token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WebserviceClientAdmin.ServiceReferenceWebservice.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WebserviceClientAdmin.ServiceReferenceWebservice.IService1>, WebserviceClientAdmin.ServiceReferenceWebservice.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SignUp(WebserviceClientAdmin.ServiceReferenceWebservice.User user, string token) {
            base.Channel.SignUp(user, token);
        }
        
        public System.Threading.Tasks.Task SignUpAsync(WebserviceClientAdmin.ServiceReferenceWebservice.User user, string token) {
            return base.Channel.SignUpAsync(user, token);
        }
        
        public string LogIn(string username, string password) {
            return base.Channel.LogIn(username, password);
        }
        
        public System.Threading.Tasks.Task<string> LogInAsync(string username, string password) {
            return base.Channel.LogInAsync(username, password);
        }
        
        public void LogOut(string token) {
            base.Channel.LogOut(token);
        }
        
        public System.Threading.Tasks.Task LogOutAsync(string token) {
            return base.Channel.LogOutAsync(token);
        }
        
        public bool IsAdmin(string token) {
            return base.Channel.IsAdmin(token);
        }
        
        public System.Threading.Tasks.Task<bool> IsAdminAsync(string token) {
            return base.Channel.IsAdminAsync(token);
        }
        
        public bool IsLoggedIn(string token) {
            return base.Channel.IsLoggedIn(token);
        }
        
        public System.Threading.Tasks.Task<bool> IsLoggedInAsync(string token) {
            return base.Channel.IsLoggedInAsync(token);
        }
        
        public WebserviceClientAdmin.ServiceReferenceWebservice.Exercicios[] GetExercicio(string token) {
            return base.Channel.GetExercicio(token);
        }
        
        public System.Threading.Tasks.Task<WebserviceClientAdmin.ServiceReferenceWebservice.Exercicios[]> GetExercicioAsync(string token) {
            return base.Channel.GetExercicioAsync(token);
        }
        
        public void AddExercicio(WebserviceClientAdmin.ServiceReferenceWebservice.Exercicios exercicios, string token) {
            base.Channel.AddExercicio(exercicios, token);
        }
        
        public System.Threading.Tasks.Task AddExercicioAsync(WebserviceClientAdmin.ServiceReferenceWebservice.Exercicios exercicios, string token) {
            return base.Channel.AddExercicioAsync(exercicios, token);
        }
        
        public void DeleteExercicioisByTitle(string exercicio, string token) {
            base.Channel.DeleteExercicioisByTitle(exercicio, token);
        }
        
        public System.Threading.Tasks.Task DeleteExercicioisByTitleAsync(string exercicio, string token) {
            return base.Channel.DeleteExercicioisByTitleAsync(exercicio, token);
        }
        
        public WebserviceClientAdmin.ServiceReferenceWebservice.Restaurantes[] GetRestaurantes(string token) {
            return base.Channel.GetRestaurantes(token);
        }
        
        public System.Threading.Tasks.Task<WebserviceClientAdmin.ServiceReferenceWebservice.Restaurantes[]> GetRestaurantesAsync(string token) {
            return base.Channel.GetRestaurantesAsync(token);
        }
        
        public void AddRestaurante(WebserviceClientAdmin.ServiceReferenceWebservice.Restaurantes restaurante, string token) {
            base.Channel.AddRestaurante(restaurante, token);
        }
        
        public System.Threading.Tasks.Task AddRestauranteAsync(WebserviceClientAdmin.ServiceReferenceWebservice.Restaurantes restaurante, string token) {
            return base.Channel.AddRestauranteAsync(restaurante, token);
        }
        
        public void DeleteRestauranteByTitle(string restaurante, string token) {
            base.Channel.DeleteRestauranteByTitle(restaurante, token);
        }
        
        public System.Threading.Tasks.Task DeleteRestauranteByTitleAsync(string restaurante, string token) {
            return base.Channel.DeleteRestauranteByTitleAsync(restaurante, token);
        }
        
        public WebserviceClientAdmin.ServiceReferenceWebservice.Vegetais[] GetVegetais(string token) {
            return base.Channel.GetVegetais(token);
        }
        
        public System.Threading.Tasks.Task<WebserviceClientAdmin.ServiceReferenceWebservice.Vegetais[]> GetVegetaisAsync(string token) {
            return base.Channel.GetVegetaisAsync(token);
        }
        
        public void AddVegetal(WebserviceClientAdmin.ServiceReferenceWebservice.Vegetais vegetais, string token) {
            base.Channel.AddVegetal(vegetais, token);
        }
        
        public System.Threading.Tasks.Task AddVegetalAsync(WebserviceClientAdmin.ServiceReferenceWebservice.Vegetais vegetais, string token) {
            return base.Channel.AddVegetalAsync(vegetais, token);
        }
        
        public void DeleteVegetaisByTitle(string vegetal, string token) {
            base.Channel.DeleteVegetaisByTitle(vegetal, token);
        }
        
        public System.Threading.Tasks.Task DeleteVegetaisByTitleAsync(string vegetal, string token) {
            return base.Channel.DeleteVegetaisByTitleAsync(vegetal, token);
        }
    }
}
